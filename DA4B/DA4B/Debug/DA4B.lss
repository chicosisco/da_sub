
DA4B.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000338  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000002e4  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000338  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000368  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  000003a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000c78  00000000  00000000  000003d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000692  00000000  00000000  00001050  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000004c8  00000000  00000000  000016e2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000044  00000000  00000000  00001bac  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003a5  00000000  00000000  00001bf0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000070a  00000000  00000000  00001f95  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  0000269f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 52 00 	call	0xa4	; 0xa4 <main>
  78:	0c 94 70 01 	jmp	0x2e0	; 0x2e0 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <initial>:
void initial(void)
{
	//clear on compare for OCOA
	//CTC mode
	//pre-scaler = 256
	TCCR0A |= (1<<COM0A1)|(0<<COM0A0)|(0<<COM0B1)|(0<<COM0B0)|(1<<WGM01)|(0<<WGM00);
  80:	84 b5       	in	r24, 0x24	; 36
  82:	82 68       	ori	r24, 0x82	; 130
  84:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1<<CS02)|(0<<CS01)|(0<<CS00);
  86:	85 b5       	in	r24, 0x25	; 37
  88:	84 60       	ori	r24, 0x04	; 4
  8a:	85 bd       	out	0x25, r24	; 37
  8c:	08 95       	ret

0000008e <adc_init>:
}

// function to initialize ADC set up
void adc_init(void)
{
	ADCSRA |= ((1<<ADEN)|(1<<ADSC)|(0<<ADPS2)|(1<<ADPS1)|(1<<ADPS0));
  8e:	ea e7       	ldi	r30, 0x7A	; 122
  90:	f0 e0       	ldi	r31, 0x00	; 0
  92:	80 81       	ld	r24, Z
  94:	83 6c       	ori	r24, 0xC3	; 195
  96:	80 83       	st	Z, r24
	ADMUX |= (1<<REFS0);
  98:	ec e7       	ldi	r30, 0x7C	; 124
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	80 81       	ld	r24, Z
  9e:	80 64       	ori	r24, 0x40	; 64
  a0:	80 83       	st	Z, r24
  a2:	08 95       	ret

000000a4 <main>:
	
    while (1) 
    {
		initial();      // calling function to initialize the setting Timer/Counter control Register 0
		adc_init();     // calling function for ADC set up
		DDRB=0x0F;
  a4:	1f e0       	ldi	r17, 0x0F	; 15
		OCR0A = ADC;  
  a6:	c8 e7       	ldi	r28, 0x78	; 120
  a8:	d0 e0       	ldi	r29, 0x00	; 0
		  }
		// setiting the period to a value of 50, fast frequency  
	else if((OCR0A>150)&&(OCR0A<=225))
		{
			period=50;
			PORTB = 0x09;
  aa:	0f 2e       	mov	r0, r31
  ac:	f9 e0       	ldi	r31, 0x09	; 9
  ae:	df 2e       	mov	r13, r31
  b0:	f0 2d       	mov	r31, r0
			_delay_ms(period);
			PORTB = 0x03;
  b2:	0f 2e       	mov	r0, r31
  b4:	f3 e0       	ldi	r31, 0x03	; 3
  b6:	ef 2e       	mov	r14, r31
  b8:	f0 2d       	mov	r31, r0
			_delay_ms(period);
			PORTB = 0x06;
  ba:	0f 2e       	mov	r0, r31
  bc:	f6 e0       	ldi	r31, 0x06	; 6
  be:	ff 2e       	mov	r15, r31
  c0:	f0 2d       	mov	r31, r0
			_delay_ms(period);
			PORTB = 0x0c;
  c2:	0c e0       	ldi	r16, 0x0C	; 12
{
	int period;    // integer used to set the period
	
    while (1) 
    {
		initial();      // calling function to initialize the setting Timer/Counter control Register 0
  c4:	0e 94 40 00 	call	0x80	; 0x80 <initial>
		adc_init();     // calling function for ADC set up
  c8:	0e 94 47 00 	call	0x8e	; 0x8e <adc_init>
		DDRB=0x0F;
  cc:	14 b9       	out	0x04, r17	; 4
		OCR0A = ADC;  
  ce:	88 81       	ld	r24, Y
  d0:	99 81       	ldd	r25, Y+1	; 0x01
  d2:	87 bd       	out	0x27, r24	; 39
		  // setting the period to a value of 2, fast frequency
		if ((OCR0A>=0)&&(OCR0A<=20))
  d4:	87 b5       	in	r24, 0x27	; 39
  d6:	87 b5       	in	r24, 0x27	; 39
  d8:	85 31       	cpi	r24, 0x15	; 21
  da:	e8 f4       	brcc	.+58     	; 0x116 <main+0x72>
		{
		period =2 ;
		PORTB = 0x09;
  dc:	d5 b8       	out	0x05, r13	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  de:	8f e3       	ldi	r24, 0x3F	; 63
  e0:	9f e1       	ldi	r25, 0x1F	; 31
  e2:	01 97       	sbiw	r24, 0x01	; 1
  e4:	f1 f7       	brne	.-4      	; 0xe2 <main+0x3e>
  e6:	00 c0       	rjmp	.+0      	; 0xe8 <main+0x44>
  e8:	00 00       	nop
		_delay_ms(period);
		PORTB = 0x03;
  ea:	e5 b8       	out	0x05, r14	; 5
  ec:	8f e3       	ldi	r24, 0x3F	; 63
  ee:	9f e1       	ldi	r25, 0x1F	; 31
  f0:	01 97       	sbiw	r24, 0x01	; 1
  f2:	f1 f7       	brne	.-4      	; 0xf0 <main+0x4c>
  f4:	00 c0       	rjmp	.+0      	; 0xf6 <main+0x52>
  f6:	00 00       	nop
		_delay_ms(period);
		PORTB = 0x06;
  f8:	f5 b8       	out	0x05, r15	; 5
  fa:	8f e3       	ldi	r24, 0x3F	; 63
  fc:	9f e1       	ldi	r25, 0x1F	; 31
  fe:	01 97       	sbiw	r24, 0x01	; 1
 100:	f1 f7       	brne	.-4      	; 0xfe <main+0x5a>
 102:	00 c0       	rjmp	.+0      	; 0x104 <main+0x60>
 104:	00 00       	nop
		_delay_ms(period);
		PORTB = 0x0c;
 106:	05 b9       	out	0x05, r16	; 5
 108:	8f e3       	ldi	r24, 0x3F	; 63
 10a:	9f e1       	ldi	r25, 0x1F	; 31
 10c:	01 97       	sbiw	r24, 0x01	; 1
 10e:	f1 f7       	brne	.-4      	; 0x10c <main+0x68>
 110:	00 c0       	rjmp	.+0      	; 0x112 <main+0x6e>
 112:	00 00       	nop
 114:	d7 cf       	rjmp	.-82     	; 0xc4 <main+0x20>
		_delay_ms(period);
		}
		// setting the period to a value of 10
		else if((OCR0A>20)&&(OCR0A<=40))
 116:	87 b5       	in	r24, 0x27	; 39
 118:	85 31       	cpi	r24, 0x15	; 21
 11a:	00 f1       	brcs	.+64     	; 0x15c <main+0xb8>
 11c:	87 b5       	in	r24, 0x27	; 39
 11e:	89 32       	cpi	r24, 0x29	; 41
 120:	e8 f4       	brcc	.+58     	; 0x15c <main+0xb8>
		{
			period=10;
			PORTB = 0x09;
 122:	d5 b8       	out	0x05, r13	; 5
 124:	8f e3       	ldi	r24, 0x3F	; 63
 126:	9c e9       	ldi	r25, 0x9C	; 156
 128:	01 97       	sbiw	r24, 0x01	; 1
 12a:	f1 f7       	brne	.-4      	; 0x128 <main+0x84>
 12c:	00 c0       	rjmp	.+0      	; 0x12e <main+0x8a>
 12e:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x03;
 130:	e5 b8       	out	0x05, r14	; 5
 132:	8f e3       	ldi	r24, 0x3F	; 63
 134:	9c e9       	ldi	r25, 0x9C	; 156
 136:	01 97       	sbiw	r24, 0x01	; 1
 138:	f1 f7       	brne	.-4      	; 0x136 <main+0x92>
 13a:	00 c0       	rjmp	.+0      	; 0x13c <main+0x98>
 13c:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x06;
 13e:	f5 b8       	out	0x05, r15	; 5
 140:	8f e3       	ldi	r24, 0x3F	; 63
 142:	9c e9       	ldi	r25, 0x9C	; 156
 144:	01 97       	sbiw	r24, 0x01	; 1
 146:	f1 f7       	brne	.-4      	; 0x144 <main+0xa0>
 148:	00 c0       	rjmp	.+0      	; 0x14a <main+0xa6>
 14a:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x0c;
 14c:	05 b9       	out	0x05, r16	; 5
 14e:	8f e3       	ldi	r24, 0x3F	; 63
 150:	9c e9       	ldi	r25, 0x9C	; 156
 152:	01 97       	sbiw	r24, 0x01	; 1
 154:	f1 f7       	brne	.-4      	; 0x152 <main+0xae>
 156:	00 c0       	rjmp	.+0      	; 0x158 <main+0xb4>
 158:	00 00       	nop
 15a:	b4 cf       	rjmp	.-152    	; 0xc4 <main+0x20>
			_delay_ms(period);	
		}
		// setting the period to a value of 20
		else if((OCR0A>40)&&(OCR0A<=80))
 15c:	87 b5       	in	r24, 0x27	; 39
 15e:	89 32       	cpi	r24, 0x29	; 41
 160:	60 f1       	brcs	.+88     	; 0x1ba <main+0x116>
 162:	87 b5       	in	r24, 0x27	; 39
 164:	81 35       	cpi	r24, 0x51	; 81
 166:	48 f5       	brcc	.+82     	; 0x1ba <main+0x116>
		{
			period=20;
			PORTB = 0x09;
 168:	d5 b8       	out	0x05, r13	; 5
 16a:	9f ef       	ldi	r25, 0xFF	; 255
 16c:	29 ef       	ldi	r18, 0xF9	; 249
 16e:	80 e0       	ldi	r24, 0x00	; 0
 170:	91 50       	subi	r25, 0x01	; 1
 172:	20 40       	sbci	r18, 0x00	; 0
 174:	80 40       	sbci	r24, 0x00	; 0
 176:	e1 f7       	brne	.-8      	; 0x170 <main+0xcc>
 178:	00 c0       	rjmp	.+0      	; 0x17a <main+0xd6>
 17a:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x03;
 17c:	e5 b8       	out	0x05, r14	; 5
 17e:	9f ef       	ldi	r25, 0xFF	; 255
 180:	29 ef       	ldi	r18, 0xF9	; 249
 182:	80 e0       	ldi	r24, 0x00	; 0
 184:	91 50       	subi	r25, 0x01	; 1
 186:	20 40       	sbci	r18, 0x00	; 0
 188:	80 40       	sbci	r24, 0x00	; 0
 18a:	e1 f7       	brne	.-8      	; 0x184 <main+0xe0>
 18c:	00 c0       	rjmp	.+0      	; 0x18e <main+0xea>
 18e:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x06;
 190:	f5 b8       	out	0x05, r15	; 5
 192:	9f ef       	ldi	r25, 0xFF	; 255
 194:	29 ef       	ldi	r18, 0xF9	; 249
 196:	80 e0       	ldi	r24, 0x00	; 0
 198:	91 50       	subi	r25, 0x01	; 1
 19a:	20 40       	sbci	r18, 0x00	; 0
 19c:	80 40       	sbci	r24, 0x00	; 0
 19e:	e1 f7       	brne	.-8      	; 0x198 <main+0xf4>
 1a0:	00 c0       	rjmp	.+0      	; 0x1a2 <main+0xfe>
 1a2:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x0c;
 1a4:	05 b9       	out	0x05, r16	; 5
 1a6:	9f ef       	ldi	r25, 0xFF	; 255
 1a8:	29 ef       	ldi	r18, 0xF9	; 249
 1aa:	80 e0       	ldi	r24, 0x00	; 0
 1ac:	91 50       	subi	r25, 0x01	; 1
 1ae:	20 40       	sbci	r18, 0x00	; 0
 1b0:	80 40       	sbci	r24, 0x00	; 0
 1b2:	e1 f7       	brne	.-8      	; 0x1ac <main+0x108>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x112>
 1b6:	00 00       	nop
 1b8:	85 cf       	rjmp	.-246    	; 0xc4 <main+0x20>
			_delay_ms(period);	
		}
		// setting the period to a value of 30
		else if((OCR0A>80)&&(OCR0A<=120))
 1ba:	87 b5       	in	r24, 0x27	; 39
 1bc:	81 35       	cpi	r24, 0x51	; 81
 1be:	60 f1       	brcs	.+88     	; 0x218 <main+0x174>
 1c0:	87 b5       	in	r24, 0x27	; 39
 1c2:	89 37       	cpi	r24, 0x79	; 121
 1c4:	48 f5       	brcc	.+82     	; 0x218 <main+0x174>
		{
			period=30;
			PORTB = 0x09;
 1c6:	d5 b8       	out	0x05, r13	; 5
 1c8:	9f ef       	ldi	r25, 0xFF	; 255
 1ca:	26 e7       	ldi	r18, 0x76	; 118
 1cc:	81 e0       	ldi	r24, 0x01	; 1
 1ce:	91 50       	subi	r25, 0x01	; 1
 1d0:	20 40       	sbci	r18, 0x00	; 0
 1d2:	80 40       	sbci	r24, 0x00	; 0
 1d4:	e1 f7       	brne	.-8      	; 0x1ce <main+0x12a>
 1d6:	00 c0       	rjmp	.+0      	; 0x1d8 <main+0x134>
 1d8:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x03;
 1da:	e5 b8       	out	0x05, r14	; 5
 1dc:	9f ef       	ldi	r25, 0xFF	; 255
 1de:	26 e7       	ldi	r18, 0x76	; 118
 1e0:	81 e0       	ldi	r24, 0x01	; 1
 1e2:	91 50       	subi	r25, 0x01	; 1
 1e4:	20 40       	sbci	r18, 0x00	; 0
 1e6:	80 40       	sbci	r24, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <main+0x13e>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <main+0x148>
 1ec:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x06;
 1ee:	f5 b8       	out	0x05, r15	; 5
 1f0:	9f ef       	ldi	r25, 0xFF	; 255
 1f2:	26 e7       	ldi	r18, 0x76	; 118
 1f4:	81 e0       	ldi	r24, 0x01	; 1
 1f6:	91 50       	subi	r25, 0x01	; 1
 1f8:	20 40       	sbci	r18, 0x00	; 0
 1fa:	80 40       	sbci	r24, 0x00	; 0
 1fc:	e1 f7       	brne	.-8      	; 0x1f6 <main+0x152>
 1fe:	00 c0       	rjmp	.+0      	; 0x200 <main+0x15c>
 200:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x0c;
 202:	05 b9       	out	0x05, r16	; 5
 204:	9f ef       	ldi	r25, 0xFF	; 255
 206:	26 e7       	ldi	r18, 0x76	; 118
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	91 50       	subi	r25, 0x01	; 1
 20c:	20 40       	sbci	r18, 0x00	; 0
 20e:	80 40       	sbci	r24, 0x00	; 0
 210:	e1 f7       	brne	.-8      	; 0x20a <main+0x166>
 212:	00 c0       	rjmp	.+0      	; 0x214 <main+0x170>
 214:	00 00       	nop
 216:	56 cf       	rjmp	.-340    	; 0xc4 <main+0x20>
			_delay_ms(period);	
		}
		
	else if((OCR0A>120)&&(OCR0A<=150))
 218:	87 b5       	in	r24, 0x27	; 39
 21a:	89 37       	cpi	r24, 0x79	; 121
 21c:	60 f1       	brcs	.+88     	; 0x276 <main+0x1d2>
 21e:	87 b5       	in	r24, 0x27	; 39
 220:	87 39       	cpi	r24, 0x97	; 151
 222:	48 f5       	brcc	.+82     	; 0x276 <main+0x1d2>
		{
			period=40;
			PORTB = 0x09;
 224:	d5 b8       	out	0x05, r13	; 5
 226:	9f ef       	ldi	r25, 0xFF	; 255
 228:	23 ef       	ldi	r18, 0xF3	; 243
 22a:	81 e0       	ldi	r24, 0x01	; 1
 22c:	91 50       	subi	r25, 0x01	; 1
 22e:	20 40       	sbci	r18, 0x00	; 0
 230:	80 40       	sbci	r24, 0x00	; 0
 232:	e1 f7       	brne	.-8      	; 0x22c <main+0x188>
 234:	00 c0       	rjmp	.+0      	; 0x236 <main+0x192>
 236:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x03;
 238:	e5 b8       	out	0x05, r14	; 5
 23a:	9f ef       	ldi	r25, 0xFF	; 255
 23c:	23 ef       	ldi	r18, 0xF3	; 243
 23e:	81 e0       	ldi	r24, 0x01	; 1
 240:	91 50       	subi	r25, 0x01	; 1
 242:	20 40       	sbci	r18, 0x00	; 0
 244:	80 40       	sbci	r24, 0x00	; 0
 246:	e1 f7       	brne	.-8      	; 0x240 <main+0x19c>
 248:	00 c0       	rjmp	.+0      	; 0x24a <main+0x1a6>
 24a:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x06;
 24c:	f5 b8       	out	0x05, r15	; 5
 24e:	9f ef       	ldi	r25, 0xFF	; 255
 250:	23 ef       	ldi	r18, 0xF3	; 243
 252:	81 e0       	ldi	r24, 0x01	; 1
 254:	91 50       	subi	r25, 0x01	; 1
 256:	20 40       	sbci	r18, 0x00	; 0
 258:	80 40       	sbci	r24, 0x00	; 0
 25a:	e1 f7       	brne	.-8      	; 0x254 <main+0x1b0>
 25c:	00 c0       	rjmp	.+0      	; 0x25e <main+0x1ba>
 25e:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x0c;
 260:	05 b9       	out	0x05, r16	; 5
 262:	9f ef       	ldi	r25, 0xFF	; 255
 264:	23 ef       	ldi	r18, 0xF3	; 243
 266:	81 e0       	ldi	r24, 0x01	; 1
 268:	91 50       	subi	r25, 0x01	; 1
 26a:	20 40       	sbci	r18, 0x00	; 0
 26c:	80 40       	sbci	r24, 0x00	; 0
 26e:	e1 f7       	brne	.-8      	; 0x268 <main+0x1c4>
 270:	00 c0       	rjmp	.+0      	; 0x272 <main+0x1ce>
 272:	00 00       	nop
 274:	27 cf       	rjmp	.-434    	; 0xc4 <main+0x20>
			_delay_ms(period);
		  }
		// setiting the period to a value of 50, fast frequency  
	else if((OCR0A>150)&&(OCR0A<=225))
 276:	87 b5       	in	r24, 0x27	; 39
 278:	87 39       	cpi	r24, 0x97	; 151
 27a:	60 f1       	brcs	.+88     	; 0x2d4 <main+0x230>
 27c:	87 b5       	in	r24, 0x27	; 39
 27e:	82 3e       	cpi	r24, 0xE2	; 226
 280:	48 f5       	brcc	.+82     	; 0x2d4 <main+0x230>
		{
			period=50;
			PORTB = 0x09;
 282:	d5 b8       	out	0x05, r13	; 5
 284:	9f ef       	ldi	r25, 0xFF	; 255
 286:	20 e7       	ldi	r18, 0x70	; 112
 288:	82 e0       	ldi	r24, 0x02	; 2
 28a:	91 50       	subi	r25, 0x01	; 1
 28c:	20 40       	sbci	r18, 0x00	; 0
 28e:	80 40       	sbci	r24, 0x00	; 0
 290:	e1 f7       	brne	.-8      	; 0x28a <main+0x1e6>
 292:	00 c0       	rjmp	.+0      	; 0x294 <main+0x1f0>
 294:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x03;
 296:	e5 b8       	out	0x05, r14	; 5
 298:	9f ef       	ldi	r25, 0xFF	; 255
 29a:	20 e7       	ldi	r18, 0x70	; 112
 29c:	82 e0       	ldi	r24, 0x02	; 2
 29e:	91 50       	subi	r25, 0x01	; 1
 2a0:	20 40       	sbci	r18, 0x00	; 0
 2a2:	80 40       	sbci	r24, 0x00	; 0
 2a4:	e1 f7       	brne	.-8      	; 0x29e <main+0x1fa>
 2a6:	00 c0       	rjmp	.+0      	; 0x2a8 <main+0x204>
 2a8:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x06;
 2aa:	f5 b8       	out	0x05, r15	; 5
 2ac:	9f ef       	ldi	r25, 0xFF	; 255
 2ae:	20 e7       	ldi	r18, 0x70	; 112
 2b0:	82 e0       	ldi	r24, 0x02	; 2
 2b2:	91 50       	subi	r25, 0x01	; 1
 2b4:	20 40       	sbci	r18, 0x00	; 0
 2b6:	80 40       	sbci	r24, 0x00	; 0
 2b8:	e1 f7       	brne	.-8      	; 0x2b2 <main+0x20e>
 2ba:	00 c0       	rjmp	.+0      	; 0x2bc <main+0x218>
 2bc:	00 00       	nop
			_delay_ms(period);
			PORTB = 0x0c;
 2be:	05 b9       	out	0x05, r16	; 5
 2c0:	9f ef       	ldi	r25, 0xFF	; 255
 2c2:	20 e7       	ldi	r18, 0x70	; 112
 2c4:	82 e0       	ldi	r24, 0x02	; 2
 2c6:	91 50       	subi	r25, 0x01	; 1
 2c8:	20 40       	sbci	r18, 0x00	; 0
 2ca:	80 40       	sbci	r24, 0x00	; 0
 2cc:	e1 f7       	brne	.-8      	; 0x2c6 <main+0x222>
 2ce:	00 c0       	rjmp	.+0      	; 0x2d0 <main+0x22c>
 2d0:	00 00       	nop
 2d2:	f8 ce       	rjmp	.-528    	; 0xc4 <main+0x20>
			_delay_ms(period);
		  }
			
			else if(OCR0A>225)
 2d4:	87 b5       	in	r24, 0x27	; 39
 2d6:	82 3e       	cpi	r24, 0xE2	; 226
 2d8:	08 f4       	brcc	.+2      	; 0x2dc <main+0x238>
 2da:	f4 ce       	rjmp	.-536    	; 0xc4 <main+0x20>
			{
				PORTB=0;
 2dc:	15 b8       	out	0x05, r1	; 5
 2de:	f2 ce       	rjmp	.-540    	; 0xc4 <main+0x20>

000002e0 <_exit>:
 2e0:	f8 94       	cli

000002e2 <__stop_program>:
 2e2:	ff cf       	rjmp	.-2      	; 0x2e2 <__stop_program>
