
DA3A.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000036  00800100  000009fc  00000a90  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000009fc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000026  00800136  00800136  00000ac6  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000ac6  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000b24  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000b64  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000007f6  00000000  00000000  00000b9c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000006de  00000000  00000000  00001392  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000002e0  00000000  00000000  00001a70  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000e4  00000000  00000000  00001d50  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000039e  00000000  00000000  00001e34  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000024c  00000000  00000000  000021d2  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  0000241e  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 8b 00 	jmp	0x116	; 0x116 <__vector_16>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec ef       	ldi	r30, 0xFC	; 252
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 33       	cpi	r26, 0x36	; 54
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e3       	ldi	r26, 0x36	; 54
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 35       	cpi	r26, 0x5C	; 92
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 74 00 	call	0xe8	; 0xe8 <main>
  9e:	0c 94 fc 04 	jmp	0x9f8	; 0x9f8 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <USART_init>:
	USART_TX_string("connection_successful\r\n"); 			//prints the word connection successful when connected and running
	while (1);
}
// USART (RS-232)
void USART_init( unsigned int ubrr ){
	UBRR0H = (unsigned char)(ubrr>>8);
  a6:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = (unsigned char)ubrr;
  aa:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	UCSR0B = (1 << TXEN0);
  ae:	88 e0       	ldi	r24, 0x08	; 8
  b0:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	UCSR0C = (3 << UCSZ00);
  b4:	86 e0       	ldi	r24, 0x06	; 6
  b6:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7e00c2>
  ba:	08 95       	ret

000000bc <USART_TX_string>:
}
//sending string to TEH RS-232
void USART_TX_string(char *data) {
  bc:	cf 93       	push	r28
  be:	df 93       	push	r29
	while (*data != '\0') {
  c0:	fc 01       	movw	r30, r24
  c2:	20 81       	ld	r18, Z
  c4:	22 23       	and	r18, r18
  c6:	69 f0       	breq	.+26     	; 0xe2 <USART_TX_string+0x26>
  c8:	dc 01       	movw	r26, r24
  ca:	11 96       	adiw	r26, 0x01	; 1
		while (!(UCSR0A & (1<<UDRE0)));
  cc:	e0 ec       	ldi	r30, 0xC0	; 192
  ce:	f0 e0       	ldi	r31, 0x00	; 0
		UDR0 = *data;
  d0:	c6 ec       	ldi	r28, 0xC6	; 198
  d2:	d0 e0       	ldi	r29, 0x00	; 0
	UCSR0C = (3 << UCSZ00);
}
//sending string to TEH RS-232
void USART_TX_string(char *data) {
	while (*data != '\0') {
		while (!(UCSR0A & (1<<UDRE0)));
  d4:	90 81       	ld	r25, Z
  d6:	95 ff       	sbrs	r25, 5
  d8:	fd cf       	rjmp	.-6      	; 0xd4 <USART_TX_string+0x18>
		UDR0 = *data;
  da:	28 83       	st	Y, r18
	UCSR0B = (1 << TXEN0);
	UCSR0C = (3 << UCSZ00);
}
//sending string to TEH RS-232
void USART_TX_string(char *data) {
	while (*data != '\0') {
  dc:	2d 91       	ld	r18, X+
  de:	21 11       	cpse	r18, r1
  e0:	f9 cf       	rjmp	.-14     	; 0xd4 <USART_TX_string+0x18>
		while (!(UCSR0A & (1<<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
  e2:	df 91       	pop	r29
  e4:	cf 91       	pop	r28
  e6:	08 95       	ret

000000e8 <main>:
char str[] = "July_4th_1776";		//creates string
char empty[] = " ";									//creates space

int main(void)
{
	Count = 0;
  e8:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <Count+0x1>
  ec:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <Count>
	TIMSK0 |= (1<<TOIE0);							//sets interrupt when overflow occurs
  f0:	ee e6       	ldi	r30, 0x6E	; 110
  f2:	f0 e0       	ldi	r31, 0x00	; 0
  f4:	80 81       	ld	r24, Z
  f6:	81 60       	ori	r24, 0x01	; 1
  f8:	80 83       	st	Z, r24
	sei ();								            //set global overflow
  fa:	78 94       	sei
	TCCR0A = 0;										//normal mode
  fc:	14 bc       	out	0x24, r1	; 36
	TCCR0B |= (1<<CS02)|(1<<CS00);					//prescaler = 1024
  fe:	85 b5       	in	r24, 0x25	; 37
 100:	85 60       	ori	r24, 0x05	; 5
 102:	85 bd       	out	0x25, r24	; 37
	USART_init(BAUD_PRESCALLER);					//baud prescaler
 104:	87 e6       	ldi	r24, 0x67	; 103
 106:	90 e0       	ldi	r25, 0x00	; 0
 108:	0e 94 53 00 	call	0xa6	; 0xa6 <USART_init>
	USART_TX_string("connection_successful\r\n"); 			//prints the word connection successful when connected and running
 10c:	84 e1       	ldi	r24, 0x14	; 20
 10e:	91 e0       	ldi	r25, 0x01	; 1
 110:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
 114:	ff cf       	rjmp	.-2      	; 0x114 <main+0x2c>

00000116 <__vector_16>:
		while (!(UCSR0A & (1<<UDRE0)));
		UDR0 = *data;
		data++;
	}
}
ISR (TIMER0_OVF_vect){								//timer0 overflow interrupt call
 116:	1f 92       	push	r1
 118:	0f 92       	push	r0
 11a:	0f b6       	in	r0, 0x3f	; 63
 11c:	0f 92       	push	r0
 11e:	11 24       	eor	r1, r1
 120:	2f 93       	push	r18
 122:	3f 93       	push	r19
 124:	4f 93       	push	r20
 126:	5f 93       	push	r21
 128:	6f 93       	push	r22
 12a:	7f 93       	push	r23
 12c:	8f 93       	push	r24
 12e:	9f 93       	push	r25
 130:	af 93       	push	r26
 132:	bf 93       	push	r27
 134:	cf 93       	push	r28
 136:	df 93       	push	r29
 138:	ef 93       	push	r30
 13a:	ff 93       	push	r31
	while (Count < 61){
		if ((TIFR0 & 0x01) == 1){					//checks for overflow flag
			TIFR0 = 0X01;							//reset overflow
 13c:	21 e0       	ldi	r18, 0x01	; 1
		UDR0 = *data;
		data++;
	}
}
ISR (TIMER0_OVF_vect){								//timer0 overflow interrupt call
	while (Count < 61){
 13e:	0c c0       	rjmp	.+24     	; 0x158 <__vector_16+0x42>
		if ((TIFR0 & 0x01) == 1){					//checks for overflow flag
 140:	a8 9b       	sbis	0x15, 0	; 21
 142:	0a c0       	rjmp	.+20     	; 0x158 <__vector_16+0x42>
			TIFR0 = 0X01;							//reset overflow
 144:	25 bb       	out	0x15, r18	; 21
			Count++;
 146:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <Count>
 14a:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <Count+0x1>
 14e:	01 96       	adiw	r24, 0x01	; 1
 150:	90 93 59 01 	sts	0x0159, r25	; 0x800159 <Count+0x1>
 154:	80 93 58 01 	sts	0x0158, r24	; 0x800158 <Count>
		UDR0 = *data;
		data++;
	}
}
ISR (TIMER0_OVF_vect){								//timer0 overflow interrupt call
	while (Count < 61){
 158:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <Count>
 15c:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <Count+0x1>
 160:	cd 97       	sbiw	r24, 0x3d	; 61
 162:	74 f3       	brlt	.-36     	; 0x140 <__vector_16+0x2a>
		if ((TIFR0 & 0x01) == 1){					//checks for overflow flag
			TIFR0 = 0X01;							//reset overflow
			Count++;
		}
	}
	if (Count > 60){
 164:	80 91 58 01 	lds	r24, 0x0158	; 0x800158 <Count>
 168:	90 91 59 01 	lds	r25, 0x0159	; 0x800159 <Count+0x1>
 16c:	cd 97       	sbiw	r24, 0x3d	; 61
 16e:	0c f4       	brge	.+2      	; 0x172 <__vector_16+0x5c>
 170:	57 c0       	rjmp	.+174    	; 0x220 <__vector_16+0x10a>
		USART_TX_string(str);				//prints string
 172:	86 e0       	ldi	r24, 0x06	; 6
 174:	91 e0       	ldi	r25, 0x01	; 1
 176:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
		USART_TX_string(empty);				//prints space
 17a:	84 e0       	ldi	r24, 0x04	; 4
 17c:	91 e0       	ldi	r25, 0x01	; 1
 17e:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
		
		x_num = rand();						// random number
 182:	0e 94 6f 01 	call	0x2de	; 0x2de <rand>
 186:	80 93 5a 01 	sts	0x015A, r24	; 0x80015a <x_num>
 18a:	90 93 5b 01 	sts	0x015B, r25	; 0x80015b <x_num+0x1>
		due_date = 327.19;					//creates floating value; due date of assignment
 18e:	42 e5       	ldi	r20, 0x52	; 82
 190:	58 e9       	ldi	r21, 0x98	; 152
 192:	63 ea       	ldi	r22, 0xA3	; 163
 194:	73 e4       	ldi	r23, 0x43	; 67
 196:	40 93 54 01 	sts	0x0154, r20	; 0x800154 <due_date>
 19a:	50 93 55 01 	sts	0x0155, r21	; 0x800155 <due_date+0x1>
 19e:	60 93 56 01 	sts	0x0156, r22	; 0x800156 <due_date+0x2>
 1a2:	70 93 57 01 	sts	0x0157, r23	; 0x800157 <due_date+0x3>
		
		snprintf(outs, sizeof(outs), "%3d\r\n", x_num);
 1a6:	9f 93       	push	r25
 1a8:	8f 93       	push	r24
 1aa:	8c e2       	ldi	r24, 0x2C	; 44
 1ac:	91 e0       	ldi	r25, 0x01	; 1
 1ae:	9f 93       	push	r25
 1b0:	8f 93       	push	r24
 1b2:	1f 92       	push	r1
 1b4:	8e e1       	ldi	r24, 0x1E	; 30
 1b6:	8f 93       	push	r24
 1b8:	c6 e3       	ldi	r28, 0x36	; 54
 1ba:	d1 e0       	ldi	r29, 0x01	; 1
 1bc:	df 93       	push	r29
 1be:	cf 93       	push	r28
 1c0:	0e 94 7f 01 	call	0x2fe	; 0x2fe <snprintf>
		USART_TX_string(outs);
 1c4:	ce 01       	movw	r24, r28
 1c6:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
		USART_TX_string(empty);
 1ca:	84 e0       	ldi	r24, 0x04	; 4
 1cc:	91 e0       	ldi	r25, 0x01	; 1
 1ce:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
		
		sprintf(outs, "%f", due_date);
 1d2:	80 91 57 01 	lds	r24, 0x0157	; 0x800157 <due_date+0x3>
 1d6:	8f 93       	push	r24
 1d8:	80 91 56 01 	lds	r24, 0x0156	; 0x800156 <due_date+0x2>
 1dc:	8f 93       	push	r24
 1de:	80 91 55 01 	lds	r24, 0x0155	; 0x800155 <due_date+0x1>
 1e2:	8f 93       	push	r24
 1e4:	80 91 54 01 	lds	r24, 0x0154	; 0x800154 <due_date>
 1e8:	8f 93       	push	r24
 1ea:	82 e3       	ldi	r24, 0x32	; 50
 1ec:	91 e0       	ldi	r25, 0x01	; 1
 1ee:	9f 93       	push	r25
 1f0:	8f 93       	push	r24
 1f2:	df 93       	push	r29
 1f4:	cf 93       	push	r28
 1f6:	0e 94 af 01 	call	0x35e	; 0x35e <sprintf>
		USART_TX_string(outs);
 1fa:	ce 01       	movw	r24, r28
 1fc:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
		USART_TX_string(empty);
 200:	84 e0       	ldi	r24, 0x04	; 4
 202:	91 e0       	ldi	r25, 0x01	; 1
 204:	0e 94 5e 00 	call	0xbc	; 0xbc <USART_TX_string>
		Count = 0;
 208:	10 92 59 01 	sts	0x0159, r1	; 0x800159 <Count+0x1>
 20c:	10 92 58 01 	sts	0x0158, r1	; 0x800158 <Count>
 210:	8d b7       	in	r24, 0x3d	; 61
 212:	9e b7       	in	r25, 0x3e	; 62
 214:	40 96       	adiw	r24, 0x10	; 16
 216:	0f b6       	in	r0, 0x3f	; 63
 218:	f8 94       	cli
 21a:	9e bf       	out	0x3e, r25	; 62
 21c:	0f be       	out	0x3f, r0	; 63
 21e:	8d bf       	out	0x3d, r24	; 61
	}
 220:	ff 91       	pop	r31
 222:	ef 91       	pop	r30
 224:	df 91       	pop	r29
 226:	cf 91       	pop	r28
 228:	bf 91       	pop	r27
 22a:	af 91       	pop	r26
 22c:	9f 91       	pop	r25
 22e:	8f 91       	pop	r24
 230:	7f 91       	pop	r23
 232:	6f 91       	pop	r22
 234:	5f 91       	pop	r21
 236:	4f 91       	pop	r20
 238:	3f 91       	pop	r19
 23a:	2f 91       	pop	r18
 23c:	0f 90       	pop	r0
 23e:	0f be       	out	0x3f, r0	; 63
 240:	0f 90       	pop	r0
 242:	1f 90       	pop	r1
 244:	18 95       	reti

00000246 <do_rand>:
 246:	8f 92       	push	r8
 248:	9f 92       	push	r9
 24a:	af 92       	push	r10
 24c:	bf 92       	push	r11
 24e:	cf 92       	push	r12
 250:	df 92       	push	r13
 252:	ef 92       	push	r14
 254:	ff 92       	push	r15
 256:	cf 93       	push	r28
 258:	df 93       	push	r29
 25a:	ec 01       	movw	r28, r24
 25c:	68 81       	ld	r22, Y
 25e:	79 81       	ldd	r23, Y+1	; 0x01
 260:	8a 81       	ldd	r24, Y+2	; 0x02
 262:	9b 81       	ldd	r25, Y+3	; 0x03
 264:	61 15       	cp	r22, r1
 266:	71 05       	cpc	r23, r1
 268:	81 05       	cpc	r24, r1
 26a:	91 05       	cpc	r25, r1
 26c:	21 f4       	brne	.+8      	; 0x276 <do_rand+0x30>
 26e:	64 e2       	ldi	r22, 0x24	; 36
 270:	79 ed       	ldi	r23, 0xD9	; 217
 272:	8b e5       	ldi	r24, 0x5B	; 91
 274:	97 e0       	ldi	r25, 0x07	; 7
 276:	2d e1       	ldi	r18, 0x1D	; 29
 278:	33 ef       	ldi	r19, 0xF3	; 243
 27a:	41 e0       	ldi	r20, 0x01	; 1
 27c:	50 e0       	ldi	r21, 0x00	; 0
 27e:	0e 94 62 04 	call	0x8c4	; 0x8c4 <__divmodsi4>
 282:	49 01       	movw	r8, r18
 284:	5a 01       	movw	r10, r20
 286:	9b 01       	movw	r18, r22
 288:	ac 01       	movw	r20, r24
 28a:	a7 ea       	ldi	r26, 0xA7	; 167
 28c:	b1 e4       	ldi	r27, 0x41	; 65
 28e:	0e 94 81 04 	call	0x902	; 0x902 <__muluhisi3>
 292:	6b 01       	movw	r12, r22
 294:	7c 01       	movw	r14, r24
 296:	ac ee       	ldi	r26, 0xEC	; 236
 298:	b4 ef       	ldi	r27, 0xF4	; 244
 29a:	a5 01       	movw	r20, r10
 29c:	94 01       	movw	r18, r8
 29e:	0e 94 8f 04 	call	0x91e	; 0x91e <__mulohisi3>
 2a2:	dc 01       	movw	r26, r24
 2a4:	cb 01       	movw	r24, r22
 2a6:	8c 0d       	add	r24, r12
 2a8:	9d 1d       	adc	r25, r13
 2aa:	ae 1d       	adc	r26, r14
 2ac:	bf 1d       	adc	r27, r15
 2ae:	b7 ff       	sbrs	r27, 7
 2b0:	03 c0       	rjmp	.+6      	; 0x2b8 <do_rand+0x72>
 2b2:	01 97       	sbiw	r24, 0x01	; 1
 2b4:	a1 09       	sbc	r26, r1
 2b6:	b0 48       	sbci	r27, 0x80	; 128
 2b8:	88 83       	st	Y, r24
 2ba:	99 83       	std	Y+1, r25	; 0x01
 2bc:	aa 83       	std	Y+2, r26	; 0x02
 2be:	bb 83       	std	Y+3, r27	; 0x03
 2c0:	9f 77       	andi	r25, 0x7F	; 127
 2c2:	df 91       	pop	r29
 2c4:	cf 91       	pop	r28
 2c6:	ff 90       	pop	r15
 2c8:	ef 90       	pop	r14
 2ca:	df 90       	pop	r13
 2cc:	cf 90       	pop	r12
 2ce:	bf 90       	pop	r11
 2d0:	af 90       	pop	r10
 2d2:	9f 90       	pop	r9
 2d4:	8f 90       	pop	r8
 2d6:	08 95       	ret

000002d8 <rand_r>:
 2d8:	0e 94 23 01 	call	0x246	; 0x246 <do_rand>
 2dc:	08 95       	ret

000002de <rand>:
 2de:	80 e0       	ldi	r24, 0x00	; 0
 2e0:	91 e0       	ldi	r25, 0x01	; 1
 2e2:	0e 94 23 01 	call	0x246	; 0x246 <do_rand>
 2e6:	08 95       	ret

000002e8 <srand>:
 2e8:	a0 e0       	ldi	r26, 0x00	; 0
 2ea:	b0 e0       	ldi	r27, 0x00	; 0
 2ec:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 2f0:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 2f4:	a0 93 02 01 	sts	0x0102, r26	; 0x800102 <__data_start+0x2>
 2f8:	b0 93 03 01 	sts	0x0103, r27	; 0x800103 <__data_start+0x3>
 2fc:	08 95       	ret

000002fe <snprintf>:
 2fe:	ae e0       	ldi	r26, 0x0E	; 14
 300:	b0 e0       	ldi	r27, 0x00	; 0
 302:	e5 e8       	ldi	r30, 0x85	; 133
 304:	f1 e0       	ldi	r31, 0x01	; 1
 306:	0c 94 a2 04 	jmp	0x944	; 0x944 <__prologue_saves__+0x1c>
 30a:	0d 89       	ldd	r16, Y+21	; 0x15
 30c:	1e 89       	ldd	r17, Y+22	; 0x16
 30e:	8f 89       	ldd	r24, Y+23	; 0x17
 310:	98 8d       	ldd	r25, Y+24	; 0x18
 312:	26 e0       	ldi	r18, 0x06	; 6
 314:	2c 83       	std	Y+4, r18	; 0x04
 316:	1a 83       	std	Y+2, r17	; 0x02
 318:	09 83       	std	Y+1, r16	; 0x01
 31a:	97 ff       	sbrs	r25, 7
 31c:	02 c0       	rjmp	.+4      	; 0x322 <snprintf+0x24>
 31e:	80 e0       	ldi	r24, 0x00	; 0
 320:	90 e8       	ldi	r25, 0x80	; 128
 322:	01 97       	sbiw	r24, 0x01	; 1
 324:	9e 83       	std	Y+6, r25	; 0x06
 326:	8d 83       	std	Y+5, r24	; 0x05
 328:	ae 01       	movw	r20, r28
 32a:	45 5e       	subi	r20, 0xE5	; 229
 32c:	5f 4f       	sbci	r21, 0xFF	; 255
 32e:	69 8d       	ldd	r22, Y+25	; 0x19
 330:	7a 8d       	ldd	r23, Y+26	; 0x1a
 332:	ce 01       	movw	r24, r28
 334:	01 96       	adiw	r24, 0x01	; 1
 336:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <vfprintf>
 33a:	4d 81       	ldd	r20, Y+5	; 0x05
 33c:	5e 81       	ldd	r21, Y+6	; 0x06
 33e:	57 fd       	sbrc	r21, 7
 340:	0a c0       	rjmp	.+20     	; 0x356 <snprintf+0x58>
 342:	2f 81       	ldd	r18, Y+7	; 0x07
 344:	38 85       	ldd	r19, Y+8	; 0x08
 346:	42 17       	cp	r20, r18
 348:	53 07       	cpc	r21, r19
 34a:	0c f4       	brge	.+2      	; 0x34e <snprintf+0x50>
 34c:	9a 01       	movw	r18, r20
 34e:	f8 01       	movw	r30, r16
 350:	e2 0f       	add	r30, r18
 352:	f3 1f       	adc	r31, r19
 354:	10 82       	st	Z, r1
 356:	2e 96       	adiw	r28, 0x0e	; 14
 358:	e4 e0       	ldi	r30, 0x04	; 4
 35a:	0c 94 be 04 	jmp	0x97c	; 0x97c <__epilogue_restores__+0x1c>

0000035e <sprintf>:
 35e:	ae e0       	ldi	r26, 0x0E	; 14
 360:	b0 e0       	ldi	r27, 0x00	; 0
 362:	e5 eb       	ldi	r30, 0xB5	; 181
 364:	f1 e0       	ldi	r31, 0x01	; 1
 366:	0c 94 a2 04 	jmp	0x944	; 0x944 <__prologue_saves__+0x1c>
 36a:	0d 89       	ldd	r16, Y+21	; 0x15
 36c:	1e 89       	ldd	r17, Y+22	; 0x16
 36e:	86 e0       	ldi	r24, 0x06	; 6
 370:	8c 83       	std	Y+4, r24	; 0x04
 372:	1a 83       	std	Y+2, r17	; 0x02
 374:	09 83       	std	Y+1, r16	; 0x01
 376:	8f ef       	ldi	r24, 0xFF	; 255
 378:	9f e7       	ldi	r25, 0x7F	; 127
 37a:	9e 83       	std	Y+6, r25	; 0x06
 37c:	8d 83       	std	Y+5, r24	; 0x05
 37e:	ae 01       	movw	r20, r28
 380:	47 5e       	subi	r20, 0xE7	; 231
 382:	5f 4f       	sbci	r21, 0xFF	; 255
 384:	6f 89       	ldd	r22, Y+23	; 0x17
 386:	78 8d       	ldd	r23, Y+24	; 0x18
 388:	ce 01       	movw	r24, r28
 38a:	01 96       	adiw	r24, 0x01	; 1
 38c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <vfprintf>
 390:	ef 81       	ldd	r30, Y+7	; 0x07
 392:	f8 85       	ldd	r31, Y+8	; 0x08
 394:	e0 0f       	add	r30, r16
 396:	f1 1f       	adc	r31, r17
 398:	10 82       	st	Z, r1
 39a:	2e 96       	adiw	r28, 0x0e	; 14
 39c:	e4 e0       	ldi	r30, 0x04	; 4
 39e:	0c 94 be 04 	jmp	0x97c	; 0x97c <__epilogue_restores__+0x1c>

000003a2 <vfprintf>:
 3a2:	ab e0       	ldi	r26, 0x0B	; 11
 3a4:	b0 e0       	ldi	r27, 0x00	; 0
 3a6:	e7 ed       	ldi	r30, 0xD7	; 215
 3a8:	f1 e0       	ldi	r31, 0x01	; 1
 3aa:	0c 94 94 04 	jmp	0x928	; 0x928 <__prologue_saves__>
 3ae:	6c 01       	movw	r12, r24
 3b0:	7b 01       	movw	r14, r22
 3b2:	8a 01       	movw	r16, r20
 3b4:	fc 01       	movw	r30, r24
 3b6:	17 82       	std	Z+7, r1	; 0x07
 3b8:	16 82       	std	Z+6, r1	; 0x06
 3ba:	83 81       	ldd	r24, Z+3	; 0x03
 3bc:	81 ff       	sbrs	r24, 1
 3be:	cc c1       	rjmp	.+920    	; 0x758 <__LOCK_REGION_LENGTH__+0x358>
 3c0:	ce 01       	movw	r24, r28
 3c2:	01 96       	adiw	r24, 0x01	; 1
 3c4:	3c 01       	movw	r6, r24
 3c6:	f6 01       	movw	r30, r12
 3c8:	93 81       	ldd	r25, Z+3	; 0x03
 3ca:	f7 01       	movw	r30, r14
 3cc:	93 fd       	sbrc	r25, 3
 3ce:	85 91       	lpm	r24, Z+
 3d0:	93 ff       	sbrs	r25, 3
 3d2:	81 91       	ld	r24, Z+
 3d4:	7f 01       	movw	r14, r30
 3d6:	88 23       	and	r24, r24
 3d8:	09 f4       	brne	.+2      	; 0x3dc <vfprintf+0x3a>
 3da:	ba c1       	rjmp	.+884    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 3dc:	85 32       	cpi	r24, 0x25	; 37
 3de:	39 f4       	brne	.+14     	; 0x3ee <vfprintf+0x4c>
 3e0:	93 fd       	sbrc	r25, 3
 3e2:	85 91       	lpm	r24, Z+
 3e4:	93 ff       	sbrs	r25, 3
 3e6:	81 91       	ld	r24, Z+
 3e8:	7f 01       	movw	r14, r30
 3ea:	85 32       	cpi	r24, 0x25	; 37
 3ec:	29 f4       	brne	.+10     	; 0x3f8 <vfprintf+0x56>
 3ee:	b6 01       	movw	r22, r12
 3f0:	90 e0       	ldi	r25, 0x00	; 0
 3f2:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 3f6:	e7 cf       	rjmp	.-50     	; 0x3c6 <vfprintf+0x24>
 3f8:	91 2c       	mov	r9, r1
 3fa:	21 2c       	mov	r2, r1
 3fc:	31 2c       	mov	r3, r1
 3fe:	ff e1       	ldi	r31, 0x1F	; 31
 400:	f3 15       	cp	r31, r3
 402:	d8 f0       	brcs	.+54     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 404:	8b 32       	cpi	r24, 0x2B	; 43
 406:	79 f0       	breq	.+30     	; 0x426 <__LOCK_REGION_LENGTH__+0x26>
 408:	38 f4       	brcc	.+14     	; 0x418 <__LOCK_REGION_LENGTH__+0x18>
 40a:	80 32       	cpi	r24, 0x20	; 32
 40c:	79 f0       	breq	.+30     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 40e:	83 32       	cpi	r24, 0x23	; 35
 410:	a1 f4       	brne	.+40     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 412:	23 2d       	mov	r18, r3
 414:	20 61       	ori	r18, 0x10	; 16
 416:	1d c0       	rjmp	.+58     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 418:	8d 32       	cpi	r24, 0x2D	; 45
 41a:	61 f0       	breq	.+24     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 41c:	80 33       	cpi	r24, 0x30	; 48
 41e:	69 f4       	brne	.+26     	; 0x43a <__LOCK_REGION_LENGTH__+0x3a>
 420:	23 2d       	mov	r18, r3
 422:	21 60       	ori	r18, 0x01	; 1
 424:	16 c0       	rjmp	.+44     	; 0x452 <__LOCK_REGION_LENGTH__+0x52>
 426:	83 2d       	mov	r24, r3
 428:	82 60       	ori	r24, 0x02	; 2
 42a:	38 2e       	mov	r3, r24
 42c:	e3 2d       	mov	r30, r3
 42e:	e4 60       	ori	r30, 0x04	; 4
 430:	3e 2e       	mov	r3, r30
 432:	2a c0       	rjmp	.+84     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 434:	f3 2d       	mov	r31, r3
 436:	f8 60       	ori	r31, 0x08	; 8
 438:	1d c0       	rjmp	.+58     	; 0x474 <__LOCK_REGION_LENGTH__+0x74>
 43a:	37 fc       	sbrc	r3, 7
 43c:	2d c0       	rjmp	.+90     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 43e:	20 ed       	ldi	r18, 0xD0	; 208
 440:	28 0f       	add	r18, r24
 442:	2a 30       	cpi	r18, 0x0A	; 10
 444:	40 f0       	brcs	.+16     	; 0x456 <__LOCK_REGION_LENGTH__+0x56>
 446:	8e 32       	cpi	r24, 0x2E	; 46
 448:	b9 f4       	brne	.+46     	; 0x478 <__LOCK_REGION_LENGTH__+0x78>
 44a:	36 fc       	sbrc	r3, 6
 44c:	81 c1       	rjmp	.+770    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 44e:	23 2d       	mov	r18, r3
 450:	20 64       	ori	r18, 0x40	; 64
 452:	32 2e       	mov	r3, r18
 454:	19 c0       	rjmp	.+50     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 456:	36 fe       	sbrs	r3, 6
 458:	06 c0       	rjmp	.+12     	; 0x466 <__LOCK_REGION_LENGTH__+0x66>
 45a:	8a e0       	ldi	r24, 0x0A	; 10
 45c:	98 9e       	mul	r9, r24
 45e:	20 0d       	add	r18, r0
 460:	11 24       	eor	r1, r1
 462:	92 2e       	mov	r9, r18
 464:	11 c0       	rjmp	.+34     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 466:	ea e0       	ldi	r30, 0x0A	; 10
 468:	2e 9e       	mul	r2, r30
 46a:	20 0d       	add	r18, r0
 46c:	11 24       	eor	r1, r1
 46e:	22 2e       	mov	r2, r18
 470:	f3 2d       	mov	r31, r3
 472:	f0 62       	ori	r31, 0x20	; 32
 474:	3f 2e       	mov	r3, r31
 476:	08 c0       	rjmp	.+16     	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 478:	8c 36       	cpi	r24, 0x6C	; 108
 47a:	21 f4       	brne	.+8      	; 0x484 <__LOCK_REGION_LENGTH__+0x84>
 47c:	83 2d       	mov	r24, r3
 47e:	80 68       	ori	r24, 0x80	; 128
 480:	38 2e       	mov	r3, r24
 482:	02 c0       	rjmp	.+4      	; 0x488 <__LOCK_REGION_LENGTH__+0x88>
 484:	88 36       	cpi	r24, 0x68	; 104
 486:	41 f4       	brne	.+16     	; 0x498 <__LOCK_REGION_LENGTH__+0x98>
 488:	f7 01       	movw	r30, r14
 48a:	93 fd       	sbrc	r25, 3
 48c:	85 91       	lpm	r24, Z+
 48e:	93 ff       	sbrs	r25, 3
 490:	81 91       	ld	r24, Z+
 492:	7f 01       	movw	r14, r30
 494:	81 11       	cpse	r24, r1
 496:	b3 cf       	rjmp	.-154    	; 0x3fe <vfprintf+0x5c>
 498:	98 2f       	mov	r25, r24
 49a:	9f 7d       	andi	r25, 0xDF	; 223
 49c:	95 54       	subi	r25, 0x45	; 69
 49e:	93 30       	cpi	r25, 0x03	; 3
 4a0:	28 f4       	brcc	.+10     	; 0x4ac <__LOCK_REGION_LENGTH__+0xac>
 4a2:	0c 5f       	subi	r16, 0xFC	; 252
 4a4:	1f 4f       	sbci	r17, 0xFF	; 255
 4a6:	9f e3       	ldi	r25, 0x3F	; 63
 4a8:	99 83       	std	Y+1, r25	; 0x01
 4aa:	0d c0       	rjmp	.+26     	; 0x4c6 <__LOCK_REGION_LENGTH__+0xc6>
 4ac:	83 36       	cpi	r24, 0x63	; 99
 4ae:	31 f0       	breq	.+12     	; 0x4bc <__LOCK_REGION_LENGTH__+0xbc>
 4b0:	83 37       	cpi	r24, 0x73	; 115
 4b2:	71 f0       	breq	.+28     	; 0x4d0 <__LOCK_REGION_LENGTH__+0xd0>
 4b4:	83 35       	cpi	r24, 0x53	; 83
 4b6:	09 f0       	breq	.+2      	; 0x4ba <__LOCK_REGION_LENGTH__+0xba>
 4b8:	59 c0       	rjmp	.+178    	; 0x56c <__LOCK_REGION_LENGTH__+0x16c>
 4ba:	21 c0       	rjmp	.+66     	; 0x4fe <__LOCK_REGION_LENGTH__+0xfe>
 4bc:	f8 01       	movw	r30, r16
 4be:	80 81       	ld	r24, Z
 4c0:	89 83       	std	Y+1, r24	; 0x01
 4c2:	0e 5f       	subi	r16, 0xFE	; 254
 4c4:	1f 4f       	sbci	r17, 0xFF	; 255
 4c6:	88 24       	eor	r8, r8
 4c8:	83 94       	inc	r8
 4ca:	91 2c       	mov	r9, r1
 4cc:	53 01       	movw	r10, r6
 4ce:	13 c0       	rjmp	.+38     	; 0x4f6 <__LOCK_REGION_LENGTH__+0xf6>
 4d0:	28 01       	movw	r4, r16
 4d2:	f2 e0       	ldi	r31, 0x02	; 2
 4d4:	4f 0e       	add	r4, r31
 4d6:	51 1c       	adc	r5, r1
 4d8:	f8 01       	movw	r30, r16
 4da:	a0 80       	ld	r10, Z
 4dc:	b1 80       	ldd	r11, Z+1	; 0x01
 4de:	36 fe       	sbrs	r3, 6
 4e0:	03 c0       	rjmp	.+6      	; 0x4e8 <__LOCK_REGION_LENGTH__+0xe8>
 4e2:	69 2d       	mov	r22, r9
 4e4:	70 e0       	ldi	r23, 0x00	; 0
 4e6:	02 c0       	rjmp	.+4      	; 0x4ec <__LOCK_REGION_LENGTH__+0xec>
 4e8:	6f ef       	ldi	r22, 0xFF	; 255
 4ea:	7f ef       	ldi	r23, 0xFF	; 255
 4ec:	c5 01       	movw	r24, r10
 4ee:	0e 94 bd 03 	call	0x77a	; 0x77a <strnlen>
 4f2:	4c 01       	movw	r8, r24
 4f4:	82 01       	movw	r16, r4
 4f6:	f3 2d       	mov	r31, r3
 4f8:	ff 77       	andi	r31, 0x7F	; 127
 4fa:	3f 2e       	mov	r3, r31
 4fc:	16 c0       	rjmp	.+44     	; 0x52a <__LOCK_REGION_LENGTH__+0x12a>
 4fe:	28 01       	movw	r4, r16
 500:	22 e0       	ldi	r18, 0x02	; 2
 502:	42 0e       	add	r4, r18
 504:	51 1c       	adc	r5, r1
 506:	f8 01       	movw	r30, r16
 508:	a0 80       	ld	r10, Z
 50a:	b1 80       	ldd	r11, Z+1	; 0x01
 50c:	36 fe       	sbrs	r3, 6
 50e:	03 c0       	rjmp	.+6      	; 0x516 <__LOCK_REGION_LENGTH__+0x116>
 510:	69 2d       	mov	r22, r9
 512:	70 e0       	ldi	r23, 0x00	; 0
 514:	02 c0       	rjmp	.+4      	; 0x51a <__LOCK_REGION_LENGTH__+0x11a>
 516:	6f ef       	ldi	r22, 0xFF	; 255
 518:	7f ef       	ldi	r23, 0xFF	; 255
 51a:	c5 01       	movw	r24, r10
 51c:	0e 94 b2 03 	call	0x764	; 0x764 <strnlen_P>
 520:	4c 01       	movw	r8, r24
 522:	f3 2d       	mov	r31, r3
 524:	f0 68       	ori	r31, 0x80	; 128
 526:	3f 2e       	mov	r3, r31
 528:	82 01       	movw	r16, r4
 52a:	33 fc       	sbrc	r3, 3
 52c:	1b c0       	rjmp	.+54     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 52e:	82 2d       	mov	r24, r2
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	88 16       	cp	r8, r24
 534:	99 06       	cpc	r9, r25
 536:	b0 f4       	brcc	.+44     	; 0x564 <__LOCK_REGION_LENGTH__+0x164>
 538:	b6 01       	movw	r22, r12
 53a:	80 e2       	ldi	r24, 0x20	; 32
 53c:	90 e0       	ldi	r25, 0x00	; 0
 53e:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 542:	2a 94       	dec	r2
 544:	f4 cf       	rjmp	.-24     	; 0x52e <__LOCK_REGION_LENGTH__+0x12e>
 546:	f5 01       	movw	r30, r10
 548:	37 fc       	sbrc	r3, 7
 54a:	85 91       	lpm	r24, Z+
 54c:	37 fe       	sbrs	r3, 7
 54e:	81 91       	ld	r24, Z+
 550:	5f 01       	movw	r10, r30
 552:	b6 01       	movw	r22, r12
 554:	90 e0       	ldi	r25, 0x00	; 0
 556:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 55a:	21 10       	cpse	r2, r1
 55c:	2a 94       	dec	r2
 55e:	21 e0       	ldi	r18, 0x01	; 1
 560:	82 1a       	sub	r8, r18
 562:	91 08       	sbc	r9, r1
 564:	81 14       	cp	r8, r1
 566:	91 04       	cpc	r9, r1
 568:	71 f7       	brne	.-36     	; 0x546 <__LOCK_REGION_LENGTH__+0x146>
 56a:	e8 c0       	rjmp	.+464    	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 56c:	84 36       	cpi	r24, 0x64	; 100
 56e:	11 f0       	breq	.+4      	; 0x574 <__LOCK_REGION_LENGTH__+0x174>
 570:	89 36       	cpi	r24, 0x69	; 105
 572:	41 f5       	brne	.+80     	; 0x5c4 <__LOCK_REGION_LENGTH__+0x1c4>
 574:	f8 01       	movw	r30, r16
 576:	37 fe       	sbrs	r3, 7
 578:	07 c0       	rjmp	.+14     	; 0x588 <__LOCK_REGION_LENGTH__+0x188>
 57a:	60 81       	ld	r22, Z
 57c:	71 81       	ldd	r23, Z+1	; 0x01
 57e:	82 81       	ldd	r24, Z+2	; 0x02
 580:	93 81       	ldd	r25, Z+3	; 0x03
 582:	0c 5f       	subi	r16, 0xFC	; 252
 584:	1f 4f       	sbci	r17, 0xFF	; 255
 586:	08 c0       	rjmp	.+16     	; 0x598 <__LOCK_REGION_LENGTH__+0x198>
 588:	60 81       	ld	r22, Z
 58a:	71 81       	ldd	r23, Z+1	; 0x01
 58c:	07 2e       	mov	r0, r23
 58e:	00 0c       	add	r0, r0
 590:	88 0b       	sbc	r24, r24
 592:	99 0b       	sbc	r25, r25
 594:	0e 5f       	subi	r16, 0xFE	; 254
 596:	1f 4f       	sbci	r17, 0xFF	; 255
 598:	f3 2d       	mov	r31, r3
 59a:	ff 76       	andi	r31, 0x6F	; 111
 59c:	3f 2e       	mov	r3, r31
 59e:	97 ff       	sbrs	r25, 7
 5a0:	09 c0       	rjmp	.+18     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
 5a2:	90 95       	com	r25
 5a4:	80 95       	com	r24
 5a6:	70 95       	com	r23
 5a8:	61 95       	neg	r22
 5aa:	7f 4f       	sbci	r23, 0xFF	; 255
 5ac:	8f 4f       	sbci	r24, 0xFF	; 255
 5ae:	9f 4f       	sbci	r25, 0xFF	; 255
 5b0:	f0 68       	ori	r31, 0x80	; 128
 5b2:	3f 2e       	mov	r3, r31
 5b4:	2a e0       	ldi	r18, 0x0A	; 10
 5b6:	30 e0       	ldi	r19, 0x00	; 0
 5b8:	a3 01       	movw	r20, r6
 5ba:	0e 94 04 04 	call	0x808	; 0x808 <__ultoa_invert>
 5be:	88 2e       	mov	r8, r24
 5c0:	86 18       	sub	r8, r6
 5c2:	45 c0       	rjmp	.+138    	; 0x64e <__LOCK_REGION_LENGTH__+0x24e>
 5c4:	85 37       	cpi	r24, 0x75	; 117
 5c6:	31 f4       	brne	.+12     	; 0x5d4 <__LOCK_REGION_LENGTH__+0x1d4>
 5c8:	23 2d       	mov	r18, r3
 5ca:	2f 7e       	andi	r18, 0xEF	; 239
 5cc:	b2 2e       	mov	r11, r18
 5ce:	2a e0       	ldi	r18, 0x0A	; 10
 5d0:	30 e0       	ldi	r19, 0x00	; 0
 5d2:	25 c0       	rjmp	.+74     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 5d4:	93 2d       	mov	r25, r3
 5d6:	99 7f       	andi	r25, 0xF9	; 249
 5d8:	b9 2e       	mov	r11, r25
 5da:	8f 36       	cpi	r24, 0x6F	; 111
 5dc:	c1 f0       	breq	.+48     	; 0x60e <__LOCK_REGION_LENGTH__+0x20e>
 5de:	18 f4       	brcc	.+6      	; 0x5e6 <__LOCK_REGION_LENGTH__+0x1e6>
 5e0:	88 35       	cpi	r24, 0x58	; 88
 5e2:	79 f0       	breq	.+30     	; 0x602 <__LOCK_REGION_LENGTH__+0x202>
 5e4:	b5 c0       	rjmp	.+362    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 5e6:	80 37       	cpi	r24, 0x70	; 112
 5e8:	19 f0       	breq	.+6      	; 0x5f0 <__LOCK_REGION_LENGTH__+0x1f0>
 5ea:	88 37       	cpi	r24, 0x78	; 120
 5ec:	21 f0       	breq	.+8      	; 0x5f6 <__LOCK_REGION_LENGTH__+0x1f6>
 5ee:	b0 c0       	rjmp	.+352    	; 0x750 <__LOCK_REGION_LENGTH__+0x350>
 5f0:	e9 2f       	mov	r30, r25
 5f2:	e0 61       	ori	r30, 0x10	; 16
 5f4:	be 2e       	mov	r11, r30
 5f6:	b4 fe       	sbrs	r11, 4
 5f8:	0d c0       	rjmp	.+26     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 5fa:	fb 2d       	mov	r31, r11
 5fc:	f4 60       	ori	r31, 0x04	; 4
 5fe:	bf 2e       	mov	r11, r31
 600:	09 c0       	rjmp	.+18     	; 0x614 <__LOCK_REGION_LENGTH__+0x214>
 602:	34 fe       	sbrs	r3, 4
 604:	0a c0       	rjmp	.+20     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 606:	29 2f       	mov	r18, r25
 608:	26 60       	ori	r18, 0x06	; 6
 60a:	b2 2e       	mov	r11, r18
 60c:	06 c0       	rjmp	.+12     	; 0x61a <__LOCK_REGION_LENGTH__+0x21a>
 60e:	28 e0       	ldi	r18, 0x08	; 8
 610:	30 e0       	ldi	r19, 0x00	; 0
 612:	05 c0       	rjmp	.+10     	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 614:	20 e1       	ldi	r18, 0x10	; 16
 616:	30 e0       	ldi	r19, 0x00	; 0
 618:	02 c0       	rjmp	.+4      	; 0x61e <__LOCK_REGION_LENGTH__+0x21e>
 61a:	20 e1       	ldi	r18, 0x10	; 16
 61c:	32 e0       	ldi	r19, 0x02	; 2
 61e:	f8 01       	movw	r30, r16
 620:	b7 fe       	sbrs	r11, 7
 622:	07 c0       	rjmp	.+14     	; 0x632 <__LOCK_REGION_LENGTH__+0x232>
 624:	60 81       	ld	r22, Z
 626:	71 81       	ldd	r23, Z+1	; 0x01
 628:	82 81       	ldd	r24, Z+2	; 0x02
 62a:	93 81       	ldd	r25, Z+3	; 0x03
 62c:	0c 5f       	subi	r16, 0xFC	; 252
 62e:	1f 4f       	sbci	r17, 0xFF	; 255
 630:	06 c0       	rjmp	.+12     	; 0x63e <__LOCK_REGION_LENGTH__+0x23e>
 632:	60 81       	ld	r22, Z
 634:	71 81       	ldd	r23, Z+1	; 0x01
 636:	80 e0       	ldi	r24, 0x00	; 0
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	0e 5f       	subi	r16, 0xFE	; 254
 63c:	1f 4f       	sbci	r17, 0xFF	; 255
 63e:	a3 01       	movw	r20, r6
 640:	0e 94 04 04 	call	0x808	; 0x808 <__ultoa_invert>
 644:	88 2e       	mov	r8, r24
 646:	86 18       	sub	r8, r6
 648:	fb 2d       	mov	r31, r11
 64a:	ff 77       	andi	r31, 0x7F	; 127
 64c:	3f 2e       	mov	r3, r31
 64e:	36 fe       	sbrs	r3, 6
 650:	0d c0       	rjmp	.+26     	; 0x66c <__LOCK_REGION_LENGTH__+0x26c>
 652:	23 2d       	mov	r18, r3
 654:	2e 7f       	andi	r18, 0xFE	; 254
 656:	a2 2e       	mov	r10, r18
 658:	89 14       	cp	r8, r9
 65a:	58 f4       	brcc	.+22     	; 0x672 <__LOCK_REGION_LENGTH__+0x272>
 65c:	34 fe       	sbrs	r3, 4
 65e:	0b c0       	rjmp	.+22     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 660:	32 fc       	sbrc	r3, 2
 662:	09 c0       	rjmp	.+18     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 664:	83 2d       	mov	r24, r3
 666:	8e 7e       	andi	r24, 0xEE	; 238
 668:	a8 2e       	mov	r10, r24
 66a:	05 c0       	rjmp	.+10     	; 0x676 <__LOCK_REGION_LENGTH__+0x276>
 66c:	b8 2c       	mov	r11, r8
 66e:	a3 2c       	mov	r10, r3
 670:	03 c0       	rjmp	.+6      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 672:	b8 2c       	mov	r11, r8
 674:	01 c0       	rjmp	.+2      	; 0x678 <__LOCK_REGION_LENGTH__+0x278>
 676:	b9 2c       	mov	r11, r9
 678:	a4 fe       	sbrs	r10, 4
 67a:	0f c0       	rjmp	.+30     	; 0x69a <__LOCK_REGION_LENGTH__+0x29a>
 67c:	fe 01       	movw	r30, r28
 67e:	e8 0d       	add	r30, r8
 680:	f1 1d       	adc	r31, r1
 682:	80 81       	ld	r24, Z
 684:	80 33       	cpi	r24, 0x30	; 48
 686:	21 f4       	brne	.+8      	; 0x690 <__LOCK_REGION_LENGTH__+0x290>
 688:	9a 2d       	mov	r25, r10
 68a:	99 7e       	andi	r25, 0xE9	; 233
 68c:	a9 2e       	mov	r10, r25
 68e:	09 c0       	rjmp	.+18     	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 690:	a2 fe       	sbrs	r10, 2
 692:	06 c0       	rjmp	.+12     	; 0x6a0 <__LOCK_REGION_LENGTH__+0x2a0>
 694:	b3 94       	inc	r11
 696:	b3 94       	inc	r11
 698:	04 c0       	rjmp	.+8      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 69a:	8a 2d       	mov	r24, r10
 69c:	86 78       	andi	r24, 0x86	; 134
 69e:	09 f0       	breq	.+2      	; 0x6a2 <__LOCK_REGION_LENGTH__+0x2a2>
 6a0:	b3 94       	inc	r11
 6a2:	a3 fc       	sbrc	r10, 3
 6a4:	11 c0       	rjmp	.+34     	; 0x6c8 <__LOCK_REGION_LENGTH__+0x2c8>
 6a6:	a0 fe       	sbrs	r10, 0
 6a8:	06 c0       	rjmp	.+12     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6aa:	b2 14       	cp	r11, r2
 6ac:	88 f4       	brcc	.+34     	; 0x6d0 <__LOCK_REGION_LENGTH__+0x2d0>
 6ae:	28 0c       	add	r2, r8
 6b0:	92 2c       	mov	r9, r2
 6b2:	9b 18       	sub	r9, r11
 6b4:	0e c0       	rjmp	.+28     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6b6:	b2 14       	cp	r11, r2
 6b8:	60 f4       	brcc	.+24     	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6ba:	b6 01       	movw	r22, r12
 6bc:	80 e2       	ldi	r24, 0x20	; 32
 6be:	90 e0       	ldi	r25, 0x00	; 0
 6c0:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 6c4:	b3 94       	inc	r11
 6c6:	f7 cf       	rjmp	.-18     	; 0x6b6 <__LOCK_REGION_LENGTH__+0x2b6>
 6c8:	b2 14       	cp	r11, r2
 6ca:	18 f4       	brcc	.+6      	; 0x6d2 <__LOCK_REGION_LENGTH__+0x2d2>
 6cc:	2b 18       	sub	r2, r11
 6ce:	02 c0       	rjmp	.+4      	; 0x6d4 <__LOCK_REGION_LENGTH__+0x2d4>
 6d0:	98 2c       	mov	r9, r8
 6d2:	21 2c       	mov	r2, r1
 6d4:	a4 fe       	sbrs	r10, 4
 6d6:	10 c0       	rjmp	.+32     	; 0x6f8 <__LOCK_REGION_LENGTH__+0x2f8>
 6d8:	b6 01       	movw	r22, r12
 6da:	80 e3       	ldi	r24, 0x30	; 48
 6dc:	90 e0       	ldi	r25, 0x00	; 0
 6de:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 6e2:	a2 fe       	sbrs	r10, 2
 6e4:	17 c0       	rjmp	.+46     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 6e6:	a1 fc       	sbrc	r10, 1
 6e8:	03 c0       	rjmp	.+6      	; 0x6f0 <__LOCK_REGION_LENGTH__+0x2f0>
 6ea:	88 e7       	ldi	r24, 0x78	; 120
 6ec:	90 e0       	ldi	r25, 0x00	; 0
 6ee:	02 c0       	rjmp	.+4      	; 0x6f4 <__LOCK_REGION_LENGTH__+0x2f4>
 6f0:	88 e5       	ldi	r24, 0x58	; 88
 6f2:	90 e0       	ldi	r25, 0x00	; 0
 6f4:	b6 01       	movw	r22, r12
 6f6:	0c c0       	rjmp	.+24     	; 0x710 <__LOCK_REGION_LENGTH__+0x310>
 6f8:	8a 2d       	mov	r24, r10
 6fa:	86 78       	andi	r24, 0x86	; 134
 6fc:	59 f0       	breq	.+22     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 6fe:	a1 fe       	sbrs	r10, 1
 700:	02 c0       	rjmp	.+4      	; 0x706 <__LOCK_REGION_LENGTH__+0x306>
 702:	8b e2       	ldi	r24, 0x2B	; 43
 704:	01 c0       	rjmp	.+2      	; 0x708 <__LOCK_REGION_LENGTH__+0x308>
 706:	80 e2       	ldi	r24, 0x20	; 32
 708:	a7 fc       	sbrc	r10, 7
 70a:	8d e2       	ldi	r24, 0x2D	; 45
 70c:	b6 01       	movw	r22, r12
 70e:	90 e0       	ldi	r25, 0x00	; 0
 710:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 714:	89 14       	cp	r8, r9
 716:	38 f4       	brcc	.+14     	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 718:	b6 01       	movw	r22, r12
 71a:	80 e3       	ldi	r24, 0x30	; 48
 71c:	90 e0       	ldi	r25, 0x00	; 0
 71e:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 722:	9a 94       	dec	r9
 724:	f7 cf       	rjmp	.-18     	; 0x714 <__LOCK_REGION_LENGTH__+0x314>
 726:	8a 94       	dec	r8
 728:	f3 01       	movw	r30, r6
 72a:	e8 0d       	add	r30, r8
 72c:	f1 1d       	adc	r31, r1
 72e:	80 81       	ld	r24, Z
 730:	b6 01       	movw	r22, r12
 732:	90 e0       	ldi	r25, 0x00	; 0
 734:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 738:	81 10       	cpse	r8, r1
 73a:	f5 cf       	rjmp	.-22     	; 0x726 <__LOCK_REGION_LENGTH__+0x326>
 73c:	22 20       	and	r2, r2
 73e:	09 f4       	brne	.+2      	; 0x742 <__LOCK_REGION_LENGTH__+0x342>
 740:	42 ce       	rjmp	.-892    	; 0x3c6 <vfprintf+0x24>
 742:	b6 01       	movw	r22, r12
 744:	80 e2       	ldi	r24, 0x20	; 32
 746:	90 e0       	ldi	r25, 0x00	; 0
 748:	0e 94 c8 03 	call	0x790	; 0x790 <fputc>
 74c:	2a 94       	dec	r2
 74e:	f6 cf       	rjmp	.-20     	; 0x73c <__LOCK_REGION_LENGTH__+0x33c>
 750:	f6 01       	movw	r30, r12
 752:	86 81       	ldd	r24, Z+6	; 0x06
 754:	97 81       	ldd	r25, Z+7	; 0x07
 756:	02 c0       	rjmp	.+4      	; 0x75c <__LOCK_REGION_LENGTH__+0x35c>
 758:	8f ef       	ldi	r24, 0xFF	; 255
 75a:	9f ef       	ldi	r25, 0xFF	; 255
 75c:	2b 96       	adiw	r28, 0x0b	; 11
 75e:	e2 e1       	ldi	r30, 0x12	; 18
 760:	0c 94 b0 04 	jmp	0x960	; 0x960 <__epilogue_restores__>

00000764 <strnlen_P>:
 764:	fc 01       	movw	r30, r24
 766:	05 90       	lpm	r0, Z+
 768:	61 50       	subi	r22, 0x01	; 1
 76a:	70 40       	sbci	r23, 0x00	; 0
 76c:	01 10       	cpse	r0, r1
 76e:	d8 f7       	brcc	.-10     	; 0x766 <strnlen_P+0x2>
 770:	80 95       	com	r24
 772:	90 95       	com	r25
 774:	8e 0f       	add	r24, r30
 776:	9f 1f       	adc	r25, r31
 778:	08 95       	ret

0000077a <strnlen>:
 77a:	fc 01       	movw	r30, r24
 77c:	61 50       	subi	r22, 0x01	; 1
 77e:	70 40       	sbci	r23, 0x00	; 0
 780:	01 90       	ld	r0, Z+
 782:	01 10       	cpse	r0, r1
 784:	d8 f7       	brcc	.-10     	; 0x77c <strnlen+0x2>
 786:	80 95       	com	r24
 788:	90 95       	com	r25
 78a:	8e 0f       	add	r24, r30
 78c:	9f 1f       	adc	r25, r31
 78e:	08 95       	ret

00000790 <fputc>:
 790:	0f 93       	push	r16
 792:	1f 93       	push	r17
 794:	cf 93       	push	r28
 796:	df 93       	push	r29
 798:	fb 01       	movw	r30, r22
 79a:	23 81       	ldd	r18, Z+3	; 0x03
 79c:	21 fd       	sbrc	r18, 1
 79e:	03 c0       	rjmp	.+6      	; 0x7a6 <fputc+0x16>
 7a0:	8f ef       	ldi	r24, 0xFF	; 255
 7a2:	9f ef       	ldi	r25, 0xFF	; 255
 7a4:	2c c0       	rjmp	.+88     	; 0x7fe <fputc+0x6e>
 7a6:	22 ff       	sbrs	r18, 2
 7a8:	16 c0       	rjmp	.+44     	; 0x7d6 <fputc+0x46>
 7aa:	46 81       	ldd	r20, Z+6	; 0x06
 7ac:	57 81       	ldd	r21, Z+7	; 0x07
 7ae:	24 81       	ldd	r18, Z+4	; 0x04
 7b0:	35 81       	ldd	r19, Z+5	; 0x05
 7b2:	42 17       	cp	r20, r18
 7b4:	53 07       	cpc	r21, r19
 7b6:	44 f4       	brge	.+16     	; 0x7c8 <fputc+0x38>
 7b8:	a0 81       	ld	r26, Z
 7ba:	b1 81       	ldd	r27, Z+1	; 0x01
 7bc:	9d 01       	movw	r18, r26
 7be:	2f 5f       	subi	r18, 0xFF	; 255
 7c0:	3f 4f       	sbci	r19, 0xFF	; 255
 7c2:	31 83       	std	Z+1, r19	; 0x01
 7c4:	20 83       	st	Z, r18
 7c6:	8c 93       	st	X, r24
 7c8:	26 81       	ldd	r18, Z+6	; 0x06
 7ca:	37 81       	ldd	r19, Z+7	; 0x07
 7cc:	2f 5f       	subi	r18, 0xFF	; 255
 7ce:	3f 4f       	sbci	r19, 0xFF	; 255
 7d0:	37 83       	std	Z+7, r19	; 0x07
 7d2:	26 83       	std	Z+6, r18	; 0x06
 7d4:	14 c0       	rjmp	.+40     	; 0x7fe <fputc+0x6e>
 7d6:	8b 01       	movw	r16, r22
 7d8:	ec 01       	movw	r28, r24
 7da:	fb 01       	movw	r30, r22
 7dc:	00 84       	ldd	r0, Z+8	; 0x08
 7de:	f1 85       	ldd	r31, Z+9	; 0x09
 7e0:	e0 2d       	mov	r30, r0
 7e2:	09 95       	icall
 7e4:	89 2b       	or	r24, r25
 7e6:	e1 f6       	brne	.-72     	; 0x7a0 <fputc+0x10>
 7e8:	d8 01       	movw	r26, r16
 7ea:	16 96       	adiw	r26, 0x06	; 6
 7ec:	8d 91       	ld	r24, X+
 7ee:	9c 91       	ld	r25, X
 7f0:	17 97       	sbiw	r26, 0x07	; 7
 7f2:	01 96       	adiw	r24, 0x01	; 1
 7f4:	17 96       	adiw	r26, 0x07	; 7
 7f6:	9c 93       	st	X, r25
 7f8:	8e 93       	st	-X, r24
 7fa:	16 97       	sbiw	r26, 0x06	; 6
 7fc:	ce 01       	movw	r24, r28
 7fe:	df 91       	pop	r29
 800:	cf 91       	pop	r28
 802:	1f 91       	pop	r17
 804:	0f 91       	pop	r16
 806:	08 95       	ret

00000808 <__ultoa_invert>:
 808:	fa 01       	movw	r30, r20
 80a:	aa 27       	eor	r26, r26
 80c:	28 30       	cpi	r18, 0x08	; 8
 80e:	51 f1       	breq	.+84     	; 0x864 <__ultoa_invert+0x5c>
 810:	20 31       	cpi	r18, 0x10	; 16
 812:	81 f1       	breq	.+96     	; 0x874 <__ultoa_invert+0x6c>
 814:	e8 94       	clt
 816:	6f 93       	push	r22
 818:	6e 7f       	andi	r22, 0xFE	; 254
 81a:	6e 5f       	subi	r22, 0xFE	; 254
 81c:	7f 4f       	sbci	r23, 0xFF	; 255
 81e:	8f 4f       	sbci	r24, 0xFF	; 255
 820:	9f 4f       	sbci	r25, 0xFF	; 255
 822:	af 4f       	sbci	r26, 0xFF	; 255
 824:	b1 e0       	ldi	r27, 0x01	; 1
 826:	3e d0       	rcall	.+124    	; 0x8a4 <__ultoa_invert+0x9c>
 828:	b4 e0       	ldi	r27, 0x04	; 4
 82a:	3c d0       	rcall	.+120    	; 0x8a4 <__ultoa_invert+0x9c>
 82c:	67 0f       	add	r22, r23
 82e:	78 1f       	adc	r23, r24
 830:	89 1f       	adc	r24, r25
 832:	9a 1f       	adc	r25, r26
 834:	a1 1d       	adc	r26, r1
 836:	68 0f       	add	r22, r24
 838:	79 1f       	adc	r23, r25
 83a:	8a 1f       	adc	r24, r26
 83c:	91 1d       	adc	r25, r1
 83e:	a1 1d       	adc	r26, r1
 840:	6a 0f       	add	r22, r26
 842:	71 1d       	adc	r23, r1
 844:	81 1d       	adc	r24, r1
 846:	91 1d       	adc	r25, r1
 848:	a1 1d       	adc	r26, r1
 84a:	20 d0       	rcall	.+64     	; 0x88c <__ultoa_invert+0x84>
 84c:	09 f4       	brne	.+2      	; 0x850 <__ultoa_invert+0x48>
 84e:	68 94       	set
 850:	3f 91       	pop	r19
 852:	2a e0       	ldi	r18, 0x0A	; 10
 854:	26 9f       	mul	r18, r22
 856:	11 24       	eor	r1, r1
 858:	30 19       	sub	r19, r0
 85a:	30 5d       	subi	r19, 0xD0	; 208
 85c:	31 93       	st	Z+, r19
 85e:	de f6       	brtc	.-74     	; 0x816 <__ultoa_invert+0xe>
 860:	cf 01       	movw	r24, r30
 862:	08 95       	ret
 864:	46 2f       	mov	r20, r22
 866:	47 70       	andi	r20, 0x07	; 7
 868:	40 5d       	subi	r20, 0xD0	; 208
 86a:	41 93       	st	Z+, r20
 86c:	b3 e0       	ldi	r27, 0x03	; 3
 86e:	0f d0       	rcall	.+30     	; 0x88e <__ultoa_invert+0x86>
 870:	c9 f7       	brne	.-14     	; 0x864 <__ultoa_invert+0x5c>
 872:	f6 cf       	rjmp	.-20     	; 0x860 <__ultoa_invert+0x58>
 874:	46 2f       	mov	r20, r22
 876:	4f 70       	andi	r20, 0x0F	; 15
 878:	40 5d       	subi	r20, 0xD0	; 208
 87a:	4a 33       	cpi	r20, 0x3A	; 58
 87c:	18 f0       	brcs	.+6      	; 0x884 <__ultoa_invert+0x7c>
 87e:	49 5d       	subi	r20, 0xD9	; 217
 880:	31 fd       	sbrc	r19, 1
 882:	40 52       	subi	r20, 0x20	; 32
 884:	41 93       	st	Z+, r20
 886:	02 d0       	rcall	.+4      	; 0x88c <__ultoa_invert+0x84>
 888:	a9 f7       	brne	.-22     	; 0x874 <__ultoa_invert+0x6c>
 88a:	ea cf       	rjmp	.-44     	; 0x860 <__ultoa_invert+0x58>
 88c:	b4 e0       	ldi	r27, 0x04	; 4
 88e:	a6 95       	lsr	r26
 890:	97 95       	ror	r25
 892:	87 95       	ror	r24
 894:	77 95       	ror	r23
 896:	67 95       	ror	r22
 898:	ba 95       	dec	r27
 89a:	c9 f7       	brne	.-14     	; 0x88e <__ultoa_invert+0x86>
 89c:	00 97       	sbiw	r24, 0x00	; 0
 89e:	61 05       	cpc	r22, r1
 8a0:	71 05       	cpc	r23, r1
 8a2:	08 95       	ret
 8a4:	9b 01       	movw	r18, r22
 8a6:	ac 01       	movw	r20, r24
 8a8:	0a 2e       	mov	r0, r26
 8aa:	06 94       	lsr	r0
 8ac:	57 95       	ror	r21
 8ae:	47 95       	ror	r20
 8b0:	37 95       	ror	r19
 8b2:	27 95       	ror	r18
 8b4:	ba 95       	dec	r27
 8b6:	c9 f7       	brne	.-14     	; 0x8aa <__ultoa_invert+0xa2>
 8b8:	62 0f       	add	r22, r18
 8ba:	73 1f       	adc	r23, r19
 8bc:	84 1f       	adc	r24, r20
 8be:	95 1f       	adc	r25, r21
 8c0:	a0 1d       	adc	r26, r0
 8c2:	08 95       	ret

000008c4 <__divmodsi4>:
 8c4:	05 2e       	mov	r0, r21
 8c6:	97 fb       	bst	r25, 7
 8c8:	1e f4       	brtc	.+6      	; 0x8d0 <__divmodsi4+0xc>
 8ca:	00 94       	com	r0
 8cc:	0e 94 79 04 	call	0x8f2	; 0x8f2 <__negsi2>
 8d0:	57 fd       	sbrc	r21, 7
 8d2:	07 d0       	rcall	.+14     	; 0x8e2 <__divmodsi4_neg2>
 8d4:	0e 94 cb 04 	call	0x996	; 0x996 <__udivmodsi4>
 8d8:	07 fc       	sbrc	r0, 7
 8da:	03 d0       	rcall	.+6      	; 0x8e2 <__divmodsi4_neg2>
 8dc:	4e f4       	brtc	.+18     	; 0x8f0 <__divmodsi4_exit>
 8de:	0c 94 79 04 	jmp	0x8f2	; 0x8f2 <__negsi2>

000008e2 <__divmodsi4_neg2>:
 8e2:	50 95       	com	r21
 8e4:	40 95       	com	r20
 8e6:	30 95       	com	r19
 8e8:	21 95       	neg	r18
 8ea:	3f 4f       	sbci	r19, 0xFF	; 255
 8ec:	4f 4f       	sbci	r20, 0xFF	; 255
 8ee:	5f 4f       	sbci	r21, 0xFF	; 255

000008f0 <__divmodsi4_exit>:
 8f0:	08 95       	ret

000008f2 <__negsi2>:
 8f2:	90 95       	com	r25
 8f4:	80 95       	com	r24
 8f6:	70 95       	com	r23
 8f8:	61 95       	neg	r22
 8fa:	7f 4f       	sbci	r23, 0xFF	; 255
 8fc:	8f 4f       	sbci	r24, 0xFF	; 255
 8fe:	9f 4f       	sbci	r25, 0xFF	; 255
 900:	08 95       	ret

00000902 <__muluhisi3>:
 902:	0e 94 ed 04 	call	0x9da	; 0x9da <__umulhisi3>
 906:	a5 9f       	mul	r26, r21
 908:	90 0d       	add	r25, r0
 90a:	b4 9f       	mul	r27, r20
 90c:	90 0d       	add	r25, r0
 90e:	a4 9f       	mul	r26, r20
 910:	80 0d       	add	r24, r0
 912:	91 1d       	adc	r25, r1
 914:	11 24       	eor	r1, r1
 916:	08 95       	ret

00000918 <__mulshisi3>:
 918:	b7 ff       	sbrs	r27, 7
 91a:	0c 94 81 04 	jmp	0x902	; 0x902 <__muluhisi3>

0000091e <__mulohisi3>:
 91e:	0e 94 81 04 	call	0x902	; 0x902 <__muluhisi3>
 922:	82 1b       	sub	r24, r18
 924:	93 0b       	sbc	r25, r19
 926:	08 95       	ret

00000928 <__prologue_saves__>:
 928:	2f 92       	push	r2
 92a:	3f 92       	push	r3
 92c:	4f 92       	push	r4
 92e:	5f 92       	push	r5
 930:	6f 92       	push	r6
 932:	7f 92       	push	r7
 934:	8f 92       	push	r8
 936:	9f 92       	push	r9
 938:	af 92       	push	r10
 93a:	bf 92       	push	r11
 93c:	cf 92       	push	r12
 93e:	df 92       	push	r13
 940:	ef 92       	push	r14
 942:	ff 92       	push	r15
 944:	0f 93       	push	r16
 946:	1f 93       	push	r17
 948:	cf 93       	push	r28
 94a:	df 93       	push	r29
 94c:	cd b7       	in	r28, 0x3d	; 61
 94e:	de b7       	in	r29, 0x3e	; 62
 950:	ca 1b       	sub	r28, r26
 952:	db 0b       	sbc	r29, r27
 954:	0f b6       	in	r0, 0x3f	; 63
 956:	f8 94       	cli
 958:	de bf       	out	0x3e, r29	; 62
 95a:	0f be       	out	0x3f, r0	; 63
 95c:	cd bf       	out	0x3d, r28	; 61
 95e:	09 94       	ijmp

00000960 <__epilogue_restores__>:
 960:	2a 88       	ldd	r2, Y+18	; 0x12
 962:	39 88       	ldd	r3, Y+17	; 0x11
 964:	48 88       	ldd	r4, Y+16	; 0x10
 966:	5f 84       	ldd	r5, Y+15	; 0x0f
 968:	6e 84       	ldd	r6, Y+14	; 0x0e
 96a:	7d 84       	ldd	r7, Y+13	; 0x0d
 96c:	8c 84       	ldd	r8, Y+12	; 0x0c
 96e:	9b 84       	ldd	r9, Y+11	; 0x0b
 970:	aa 84       	ldd	r10, Y+10	; 0x0a
 972:	b9 84       	ldd	r11, Y+9	; 0x09
 974:	c8 84       	ldd	r12, Y+8	; 0x08
 976:	df 80       	ldd	r13, Y+7	; 0x07
 978:	ee 80       	ldd	r14, Y+6	; 0x06
 97a:	fd 80       	ldd	r15, Y+5	; 0x05
 97c:	0c 81       	ldd	r16, Y+4	; 0x04
 97e:	1b 81       	ldd	r17, Y+3	; 0x03
 980:	aa 81       	ldd	r26, Y+2	; 0x02
 982:	b9 81       	ldd	r27, Y+1	; 0x01
 984:	ce 0f       	add	r28, r30
 986:	d1 1d       	adc	r29, r1
 988:	0f b6       	in	r0, 0x3f	; 63
 98a:	f8 94       	cli
 98c:	de bf       	out	0x3e, r29	; 62
 98e:	0f be       	out	0x3f, r0	; 63
 990:	cd bf       	out	0x3d, r28	; 61
 992:	ed 01       	movw	r28, r26
 994:	08 95       	ret

00000996 <__udivmodsi4>:
 996:	a1 e2       	ldi	r26, 0x21	; 33
 998:	1a 2e       	mov	r1, r26
 99a:	aa 1b       	sub	r26, r26
 99c:	bb 1b       	sub	r27, r27
 99e:	fd 01       	movw	r30, r26
 9a0:	0d c0       	rjmp	.+26     	; 0x9bc <__udivmodsi4_ep>

000009a2 <__udivmodsi4_loop>:
 9a2:	aa 1f       	adc	r26, r26
 9a4:	bb 1f       	adc	r27, r27
 9a6:	ee 1f       	adc	r30, r30
 9a8:	ff 1f       	adc	r31, r31
 9aa:	a2 17       	cp	r26, r18
 9ac:	b3 07       	cpc	r27, r19
 9ae:	e4 07       	cpc	r30, r20
 9b0:	f5 07       	cpc	r31, r21
 9b2:	20 f0       	brcs	.+8      	; 0x9bc <__udivmodsi4_ep>
 9b4:	a2 1b       	sub	r26, r18
 9b6:	b3 0b       	sbc	r27, r19
 9b8:	e4 0b       	sbc	r30, r20
 9ba:	f5 0b       	sbc	r31, r21

000009bc <__udivmodsi4_ep>:
 9bc:	66 1f       	adc	r22, r22
 9be:	77 1f       	adc	r23, r23
 9c0:	88 1f       	adc	r24, r24
 9c2:	99 1f       	adc	r25, r25
 9c4:	1a 94       	dec	r1
 9c6:	69 f7       	brne	.-38     	; 0x9a2 <__udivmodsi4_loop>
 9c8:	60 95       	com	r22
 9ca:	70 95       	com	r23
 9cc:	80 95       	com	r24
 9ce:	90 95       	com	r25
 9d0:	9b 01       	movw	r18, r22
 9d2:	ac 01       	movw	r20, r24
 9d4:	bd 01       	movw	r22, r26
 9d6:	cf 01       	movw	r24, r30
 9d8:	08 95       	ret

000009da <__umulhisi3>:
 9da:	a2 9f       	mul	r26, r18
 9dc:	b0 01       	movw	r22, r0
 9de:	b3 9f       	mul	r27, r19
 9e0:	c0 01       	movw	r24, r0
 9e2:	a3 9f       	mul	r26, r19
 9e4:	70 0d       	add	r23, r0
 9e6:	81 1d       	adc	r24, r1
 9e8:	11 24       	eor	r1, r1
 9ea:	91 1d       	adc	r25, r1
 9ec:	b2 9f       	mul	r27, r18
 9ee:	70 0d       	add	r23, r0
 9f0:	81 1d       	adc	r24, r1
 9f2:	11 24       	eor	r1, r1
 9f4:	91 1d       	adc	r25, r1
 9f6:	08 95       	ret

000009f8 <_exit>:
 9f8:	f8 94       	cli

000009fa <__stop_program>:
 9fa:	ff cf       	rjmp	.-2      	; 0x9fa <__stop_program>
